[build-system]
requires = [
  "setuptools>=68",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "omniparser"
version = "0.1.0"
description = "OmniParser: utilities and demos for parsing UI/screens with vision models"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
keywords = ["vision", "ocr", "ui", "omniparser"]
dependencies = [
  "easyocr==1.7.2",
  "supervision==0.18.0",
  "openai==1.3.5",
  "transformers==4.49.0",
  "ultralytics==8.3.70",
  "azure-identity==1.24.0",
  "numpy==1.26.4",
  "opencv-python==4.6.0.66",
  "opencv-python-headless==4.6.0.66",
  "gradio==5.13.2",
  "dill==0.4.0",
  "accelerate==1.10.1",
  "timm==1.0.19",
  "einops==0.8.0",
  "paddleocr==2.7.3",
  "fastapi",
  "uvicorn",
  "pydantic==2.10.6",
  "Pillow",
  "huggingface_hub",
  "python-multipart",
  "pyautogui==0.9.54",
  "streamlit>=1.38.0",
  "anthropic[bedrock,vertex]>=0.37.1",
  "jsonschema==4.22.0",
  "boto3>=1.28.57",
  "google-auth<3,>=2",
  "screeninfo==0.8.1",
  "uiautomation==2.0.29",
  "dashscope==1.24.2",
  "groq==0.31.0",
  "paddlepaddle==2.6.2"
]

[project.optional-dependencies]
dev = [
  "ruff==0.6.7",
  "pre-commit==3.8.0",
  "pytest==8.3.3",
  "pytest-asyncio==0.23.6",
]
cpu = [
  "torch==2.8.0",
  "torchvision==0.23.0",
  "paddlepaddle==2.6.2",
]
gpu = [
  # Install with the PyTorch CUDA index URL to get CUDA wheels,
  # and with PaddlePaddle's CUDA wheel find-links (see README/instructions).
  "torch==2.8.0",
  "torchvision==0.23.0",
  # Use the GPU variant of PaddlePaddle. Requires CUDA-specific wheels.
  "paddlepaddle-gpu==2.6.2",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["omnitool", "util"]

[tool.uv]
# Prefer a managed Python that satisfies `requires-python`.
python-preference = "managed"
dev-dependencies = [
  "ruff==0.6.7",
  "pre-commit==3.8.0",
  "pytest==8.3.3",
  "pytest-asyncio==0.23.6",
]

# Note: The extras (cpu/gpu) are already defined in
# [project.optional-dependencies] above and are intended for installation
# via `.[cpu]` or `.[gpu]`. The previous [tool.uv.dependency-groups]
# entries duplicated those extras and caused parse issues in some uv
# versions. If you need uv dependency groups, define them as needed later
# with the correct syntax.
